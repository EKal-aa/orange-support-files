<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="Select Columns" qualified_name="Orange.widgets.data.owselectcolumns.OWSelectAttributes" project_name="Orange3" version="" title="Select Columns" position="(155.0, 200.0)" />
		<node id="1" name="Tree" qualified_name="Orange.widgets.model.owtree.OWTreeLearner" project_name="Orange3" version="" title="Tree" position="(308.0, 248.0)" />
		<node id="2" name="Paint Data" qualified_name="Orange.widgets.data.owpaintdata.OWPaintData" project_name="Orange3" version="" title="Paint Data" position="(21.0, 200.0)" />
		<node id="3" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table" position="(262.0, 361.0)" />
		<node id="4" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Diagram_partition_boundaries.py" position="(551.0, 197.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="1" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="1" source_node_id="2" sink_node_id="0" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="2" source_node_id="0" sink_node_id="3" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="3" source_node_id="0" sink_node_id="4" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="4" source_node_id="1" sink_node_id="4" source_channel="Model" sink_channel="Classifier" enabled="true" />
	</links>
	<annotations>
		<text id="0" type="text/markdown" rect="(-12.0, 19.0, 954.0, 115.0)" font-family="MS Shell Dlg 2" font-size="16"># Example for Diagram_partition_boundaries.py
Try different numbers for maximal depth of tree in Tree Widget. Background colors show predictions of model. 

Close Window with diagram before you try the next number.</text>
	</annotations>
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="pickle">gASVnwEAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNpZ25v
cmVfbmV3X2ZlYXR1cmVzlImME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAABGwAAAB0
AAAGwwAAAr8AAARsAAAAdAAABsMAAAK/AAAAAAAAAAAHgAAABGwAAAB0AAAGwwAAAr+UjBJ1c2Vf
aW5wdXRfZmVhdHVyZXOUiYwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZSMFW9y
YW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMEWRvbWFp
bl9yb2xlX2hpbnRzlH2UKIwBeJRLAoaUjAlhdHRyaWJ1dGWUSwCGlIwBeZRLAoaUaBVLAYaUjAVD
bGFzc5RLAYaUjAVjbGFzc5RLAIaUdUr+////hpRoB0sBdYwKYXR0cmlidXRlc5R9lChoE0sCaBdL
AowFQ2xhc3OUSwF1jAVtZXRhc5R9lHViYXUu
</properties>
		<properties node_id="1" format="literal">{'auto_apply': True, 'binary_trees': True, 'controlAreaVisible': True, 'learner_name': '1', 'limit_depth': True, 'limit_majority': False, 'limit_min_internal': False, 'limit_min_leaf': False, 'max_depth': 4, 'min_internal': 5, 'min_leaf': 4, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\xce\x00\x00\x01c\x00\x00\x01\xfe\x00\x00\x02\x9f\x00\x00\x00\xcf\x00\x00\x01\x82\x00\x00\x01\xfd\x00\x00\x02\x9e\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\xcf\x00\x00\x01\x82\x00\x00\x01\xfd\x00\x00\x02\x9e', 'sufficient_majority': 95, '__version__': 1}</properties>
		<properties node_id="2" format="literal">{'attr1': 'x', 'attr2': 'y', 'autocommit': False, 'brushRadius': 75, 'controlAreaVisible': True, 'data': [[0.06893015015138503, 0.3210779084070606, 0.0], [0.06619666521253735, 0.28313114758141184, 0.0], [0.12246781978016603, 0.3210499704580294, 0.0], [0.08359834846885505, 0.3220378640307885, 0.0], [0.12831463798000187, 0.29088205833834163, 0.0], [0.1389123863783375, 0.3306273361698388, 0.0], [0.2590984721828597, 0.2858170376390887, 0.0], [0.2492344731149529, 0.34421279153207407, 0.0], [0.27466942636545144, 0.29243178643748746, 0.0], [0.35087038189306624, 0.3301126505743101, 0.0], [0.37155149458228987, 0.29256195165375887, 0.0], [0.3249366739130039, 0.2777362185553907, 0.0], [0.28048505540523266, 0.3315559282341088, 0.0], [0.38667190053344896, 0.9851462353336328, 0.0], [0.31678436580357616, 0.9559473990626567, 0.0], [0.3332947609039817, 0.8316511487310179, 0.0], [0.3388566547372585, 0.7512534110382094, 0.0], [0.33147525050419174, 0.8611996915126896, 0.0], [0.33678430621203964, 0.7245648043891699, 0.0], [0.36164267558460955, 0.7029423196684739, 0.0], [0.32654802450500164, 0.6469103445110544, 0.0], [0.32504856186651443, 0.5294287695048321, 0.0], [0.35350873597471416, 0.5240612802290197, 0.0], [0.37834214033580355, 0.45248217435505556, 0.0], [0.33830968817272133, 0.4864789264668123, 0.0], [0.33835195619627495, 0.3501332585575682, 0.0], [0.3804651772790219, 0.39902591365380174, 0.0], [0.3489924383779381, 0.4660453570682819, 0.0], [0.3191049213689588, 0.42436491064337495, 0.0], [0.28735852617626445, 0.4537939956946248, 0.0], [0.3192071055709449, 0.38399621993315236, 0.0], [0.05734387149983465, 0.4431245579650951, 0.0], [0.07851462215092853, 0.3544708805501463, 0.0], [0.13970387522711405, 0.4088168120548115, 0.0], [0.07598085715947263, 0.4477636156146864, 0.0], [0.1834863522926166, 0.5662228888669573, 0.0], [0.16484781350565628, 0.6054174853851464, 0.0], [0.20471666077269018, 0.6514835289616415, 0.0], [0.2108023385526449, 0.7484066053312773, 0.0], [0.11654636444964166, 0.7952044180038139, 0.0], [0.10788071235070872, 0.8469923584376771, 0.0], [0.12037328036946138, 0.8768281819957696, 0.0], [0.09887136234412533, 0.8827240902969118, 0.0], [0.05731252290025185, 0.9842406500858586, 0.0], [0.08644962877920565, 0.955768610448194, 0.0], [0.16721192793451797, 0.8741322897617473, 0.0], [0.13904660457462187, 0.8414928706628996, 0.0], [0.07204685487793708, 0.8001640354507507, 0.0], [0.0946109209773187, 0.7582309883442134, 0.0], [0.11872131675700306, 0.6883629409180905, 0.0], [0.39634926190999364, 0.6767486541105447, 0.0], [0.3429739320070086, 0.5924576278331409, 0.0], [0.3878720581459562, 0.6291781925562132, 0.0], [0.432400097941498, 0.6552572709097552, 0.0], [0.4927052935468013, 0.6268620231995444, 0.0], [0.49667356483901537, 0.5583591756980197, 0.0], [0.5014180801805646, 0.6582892321567215, 0.0], [0.5432301979240007, 0.61657282685179, 0.0], [0.5641210538835668, 0.6550363211335004, 0.0], [0.5798399335806709, 0.6187754502344404, 0.0], [0.6466195162639296, 0.8758315046117047, 0.0], [0.5740949751752656, 0.8908979628381365, 0.0], [0.6584429446951515, 0.8204474228824727, 0.0], [0.6476769867509993, 0.8429031190056382, 0.0], [0.5699395423788042, 0.8171705534522339, 0.0], [0.639688922238295, 0.7606077652207365, 0.0], [0.6347642819564947, 0.7690389684249044, 0.0], [0.585451497581522, 0.6911687769892522, 0.0], [0.6097862815650051, 0.6854166848721683, 0.0], [0.6157130244278074, 0.7755139612096321, 0.0], [0.6168954910214748, 0.670330966511194, 0.0], [0.5674762049795816, 0.6984322448271351, 0.0], [0.628091070706859, 0.9501363213231231, 0.0], [0.4772228720781097, 0.8483917182830032, 0.0], [0.46837186647606327, 0.767640168111186, 0.0], [0.33442062675612555, 0.7649752196000797, 0.0], [0.5275230407429896, 0.7660297834167548, 0.0], [0.40277676590666656, 0.714654427585577, 0.0], [0.47276978435537775, 0.7879940520282427, 0.0], [0.46933633713206174, 0.8454747207684626, 0.0], [0.4325516463315897, 0.9036988652553736, 0.0], [0.44519271221521844, 0.9358238146305132, 0.0], [0.4890340894011896, 0.968888485950296, 0.0], [0.6792704495210024, 0.5717839607201309, 0.0], [0.040361090641120104, 0.05427168576104746, 1.0], [0.06691899412492483, 0.2121125069321319, 1.0], [0.008165300865206004, 0.13070604739547423, 1.0], [0.14093326062786055, 0.12225344964896863, 1.0], [0.17172145667650868, 0.09103785662066483, 1.0], [0.23816459297435272, 0.1353778203547142, 1.0], [0.3182215952936584, 0.15954273513681547, 1.0], [0.3037601145942785, 0.16974486700717284, 1.0], [0.2509697852793099, 0.09085933502228663, 1.0], [0.30606070643950234, 0.10531090052593685, 1.0], [0.27159648732949765, 0.0854612564858481, 1.0], [0.37883292407731056, 0.15880783767219495, 1.0], [0.36951047486514715, 0.1717611997746907, 1.0], [0.33052970485624844, 0.10190125162232636, 1.0], [0.5289718652928993, 0.1098233890180425, 1.0], [0.5125672994683916, 0.12098823053757993, 1.0], [0.46831049959031906, 0.06676785022047903, 1.0], [0.5383111084683371, 0.05342544364165594, 1.0], [0.5986632204263697, 0.05631189500813287, 1.0], [0.7216198427627719, 0.04911897177926275, 1.0], [0.6877730396323061, 0.06730889406438541, 1.0], [0.6946303586262521, 0.10988679825074378, 1.0], [0.7812208093682238, 0.1958773977345315, 1.0], [0.8419244546784438, 0.07449607324926023, 1.0], [0.8184022120581057, 0.1215478126330106, 1.0], [0.9363802701534165, 0.063352883022361, 1.0], [0.8953849627725373, 0.15046099276976838, 1.0], [0.9014462664469457, 0.14686959755717388, 1.0], [0.5898387341453952, 0.2780815278947757, 1.0], [0.6471117303845366, 0.27659240691885467, 1.0], [0.6846296816701806, 0.31312235510393954, 1.0], [0.8251320099140912, 0.35376951135588075, 1.0], [0.8581339524946114, 0.3748977463031018, 1.0], [0.9052861829293043, 0.40565327833237796, 1.0], [0.8918055728014609, 0.31903692372684106, 1.0], [0.5496198678419827, 0.4254864685553611, 1.0], [0.5571296777262659, 0.49510912855130346, 1.0], [0.6662859087790242, 0.44034789622092196, 1.0], [0.6831303869024462, 0.4581070396770363, 1.0], [0.7458857285409713, 0.5103162003051455, 1.0], [0.7893677560436041, 0.4588195727963521, 1.0], [0.8196131547003938, 0.48231884539262015, 1.0], [0.7985879594732469, 0.4804723804244242, 1.0], [0.7722303838488684, 0.8096344179167877, 1.0], [0.8049043089559986, 0.8236496047547064, 1.0], [0.7558619315479174, 0.7080111890367464, 1.0], [0.7849019421615842, 0.5660036499499177, 1.0], [0.8316704772355291, 0.5908758069670672, 1.0], [0.8222792942983703, 0.5878116467537509, 1.0], [0.9778762521262659, 0.7954642407548216, 1.0], [0.9960737845914456, 0.6918745763469493, 1.0], [0.9612180239112811, 0.6418471280601423, 1.0], [0.9437648974044774, 0.5557932953881505, 1.0], [0.9601351941227885, 0.5531808360448466, 1.0], [0.5774655880087285, 0.28377572462599165, 1.0], [0.46379513633014, 0.2754664484451719, 1.0], [0.42746499631540164, 0.5815220949263502, 1.0], [0.6492041267501844, 0.6385597381342063, 1.0], [0.010294767870302122, 0.3505891980360065, 1.0], [0.1919454679439941, 0.34780687397708676, 1.0], [0.5186722282648707, 0.47410573164764974, 1.0], [0.5009055819406141, 0.33738646673034806, 1.0], [0.4312232866617539, 0.3756301145662848, 1.0], [0.448761974944731, 0.48274959083469726, 1.0], [0.7268754605747975, 0.9140098199672668, 0.0], [0.7594473102431836, 0.9543535188216039, 0.0], [0.8396241709653649, 0.9640916530278233, 0.0], [0.8696904937361829, 0.9209656301145663, 0.0], [0.9811864406779662, 0.9543535188216039, 0.0], [0.9235593220338985, 0.8875777414075287, 0.0], [0.8057995578481947, 0.8931423895253683, 0.0], [0.5915770081061165, 0.5648281505728314, 0.0], [0.6667428150331615, 0.7150736497545008, 0.0], [0.6805232129697864, 0.8764484451718495, 0.0], [0.16187914517317611, 0.24764320785597382, 1.0], [0.3360132645541636, 0.22816693944353517, 1.0], [0.6266543846720708, 0.1697381342062193, 1.0], [0.7607000736919677, 0.30050736497545005, 1.0], [0.49636698599852613, 0.17669394435351882, 1.0], [0.3585630066322771, 0.37284779050736494, 1.0], [0.6366764922623435, 0.7957610474631751, 1.0], [0.7707221812822403, 0.911227495908347, 1.0], [0.9661532792925572, 0.9084451718494272, 1.0]], 'density': 7, 'hasAttr2': True, 'labels': ['C1', 'C2'], 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00J\x00\x00\x00\xcf\x00\x00\x04h\x00\x00\x03\xf5\x00\x00\x00J\x00\x00\x00\xcf\x00\x00\x04h\x00\x00\x03\xf5\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00J\x00\x00\x00\xcf\x00\x00\x04h\x00\x00\x03\xf5', 'symbol_size': 10, 'table_name': 'Painted data', '__version__': 1}</properties>
		<properties node_id="3" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': False, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03C\x00\x00\x01\xe3\x00\x00\x058\x00\x00\x03\x8b\x00\x00\x03C\x00\x00\x01\xe3\x00\x00\x058\x00\x00\x03\x8b\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03C\x00\x00\x01\xe3\x00\x00\x058\x00\x00\x03\x8b', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="4" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xda\x00\x00\x00\xeb\x00\x00\x06\x93\x00\x00\x03\x1f\x00\x00\x02\xda\x00\x00\x00\xeb\x00\x00\x06\x93\x00\x00\x03\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x02\xda\x00\x00\x00\xeb\x00\x00\x06\x93\x00\x00\x03\x1f', 'scriptLibrary': [{'name': 'Diagram_partition_boundaries', 'script': '# Shows 2D-diagram of data with partition boundaries\n# (no settings)\n#####################################################\n# File: Diagram_partition_boundaries.py\n\n"""\n* Widget input: \n- data with two numerical features, one categorical target\n- trained model on classifier input\n\n* Widget output: -\n\nUsage:\n* to visually show partition boundaries and over-/underfitting\n\n\nadapted from:\nPython Data Science Handbook – Essential Tools for Working with Data\nISBN 978-1491912058, 2017, from Jake VanderPlas\n"""\n\nimport Orange\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\n\ndata = in_data.copy()\nmodel = in_classifier\ndef visualize_classifier(model, data, ax=None, cmap=\'rainbow\'):\n    X = data.X\n    y = data.Y\n    ax = ax or plt.gca()\n    # show training data\n    ax.scatter(X[:, 0], X[:, 1], c=y, s=100, cmap=cmap, clim=(y.min(), y.max()), zorder=3)\n    xlim = ax.get_xlim()\n    ylim = ax.get_ylim()\n\n    # create grid and compute predictions on grid data\n    xx, yy = np.meshgrid(np.linspace(*xlim, num=200), np.linspace(*ylim, num=200))\n    Z = model((np.c_[xx.ravel(), yy.ravel()])).reshape(xx.shape)\n\n    # create diagram of grid data\n    n_classes = len(np.unique(y))\n    ax.scatter(xx,yy,Z)\n    contours = ax.contourf(xx, yy, Z, alpha=0.3, levels=np.arange(n_classes + 1) - 0.5, cmap=cmap,  zorder=1)\n    ax.set(xlim=xlim, ylim=ylim)\n    plt.xlabel(in_data.domain[0])\n    plt.ylabel(in_data.domain[1])\n    plt.show()\n    \nvisualize_classifier(model=model, data=data)\n\n', 'filename': None}], 'scriptText': '# Shows 2D-diagram of data with partition boundaries\n# (no settings)\n#####################################################\n# File: Diagram_partition_boundaries.py\n\n"""\n* Widget input: \n- data with two numerical features, one categorical target\n- trained model on classifier input\n\n* Widget output: -\n\nUsage:\n* to visually show partition boundaries and over-/underfitting\n\n\nadapted from:\nPython Data Science Handbook – Essential Tools for Working with Data\nISBN 978-1491912058, 2017, from Jake VanderPlas\n"""\n\nimport Orange\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.lines as mlines\n\ndata = in_data.copy()\nmodel = in_classifier\ndef visualize_classifier(model, data, ax=None, cmap=\'rainbow\'):\n    X = data.X\n    y = data.Y\n    ax = ax or plt.gca()\n    # show training data\n    ax.scatter(X[:, 0], X[:, 1], c=y, s=100, cmap=cmap, clim=(y.min(), y.max()), zorder=3)\n    xlim = ax.get_xlim()\n    ylim = ax.get_ylim()\n\n    # create grid and compute predictions on grid data\n    xx, yy = np.meshgrid(np.linspace(*xlim, num=200), np.linspace(*ylim, num=200))\n    Z = model((np.c_[xx.ravel(), yy.ravel()])).reshape(xx.shape)\n\n    # create diagram of grid data\n    n_classes = len(np.unique(y))\n    ax.scatter(xx,yy,Z)\n    contours = ax.contourf(xx, yy, Z, alpha=0.3, levels=np.arange(n_classes + 1) - 0.5, cmap=cmap,  zorder=1)\n    ax.set(xlim=xlim, ylim=ylim)\n    plt.xlabel(in_data.domain[0])\n    plt.ylabel(in_data.domain[1])\n    plt.show()\n    \nvisualize_classifier(model=model, data=data)\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x01\xd7\x00\x00\x00^\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
